AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy Network and Security
Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: VPC
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: IGW
  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway
  NatGateway:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId:
        Fn::GetAtt:
          - ElasticIP
          - AllocationId
      SubnetId:
        Ref: PublicSubnet1
      Tags:
        - Key: Name
          Value: NatGateway
  ElasticIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain:
        Ref: VPC
  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone:
        'Fn::Select':
          - '0'
          - 'Fn::GetAZs': ''
      Tags:
        - Key: Name
          Value: Public Subnet 1
  PublicSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone:
        'Fn::Select':
          - '1'
          - 'Fn::GetAZs': ''
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Public Subnet 2
  PrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: 10.0.3.0/24
      AvailabilityZone:
        'Fn::Select':
          - '0'
          - 'Fn::GetAZs': ''
      Tags:
        - Key: Name
          Value: Private Subnet 1
  PrivateSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: 10.0.4.0/24
      AvailabilityZone:
        'Fn::Select':
          - '1'
          - 'Fn::GetAZs': ''
      Tags:
        - Key: Name
          Value: Private Subnet 2
  MainRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value: Main Route Table
  MainRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId:
        Ref: MainRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGateway
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value: Public Route Table
  PublicRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
  PublicSubnetRouteTableAssociation1:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId:
        Ref: PublicSubnet1
      RouteTableId:
        Ref: PublicRouteTable
  PublicSubnetRouteTableAssociation2:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId:
        Ref: PublicSubnet2
      RouteTableId:
        Ref: PublicRouteTable
  PrivateSubnetRouteTableAssociation1:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId:
        Ref: PrivateSubnet1
      RouteTableId:
        Ref: MainRouteTable
  PrivateSubnetRouteTableAssociation2:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId:
        Ref: PrivateSubnet2
      RouteTableId:
        Ref: MainRouteTable
  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group assigned to the load balancer.
      GroupName: ALBSecurityGroup
      SecurityGroupIngress: 
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
      VpcId:
        Ref: VPC
  WebInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group assigned to the Web Instances.
      GroupName: WebSG
      SecurityGroupIngress:
        - CidrIp: 10.0.0.0/16
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
        - CidrIp: 10.0.0.0/16
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
      VpcId:
        Ref: VPC
  BastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group assigned to the Bastion Host.
      GroupName: BastionSG
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
      VpcId:
        Ref: VPC
Outputs:
  VPC:
    Description: VPC
    Value:
      Ref: VPC
  PublicSubnet1:
    Description: PublicSubnet1
    Value:
      Ref: PublicSubnet1
  PublicSubnet2:
    Description: PublicSubnet2
    Value:
      Ref: PublicSubnet2
  PrivateSubnet1:
    Description: PrivateSubnet1
    Value:
      Ref: PrivateSubnet1
  PrivateSubnet2:
    Description: PrivateSubnet2
    Value:
      Ref: PrivateSubnet2
  WebInstanceSecurityGroup:
    Description: WebInstanceSecurityGroup
    Value:
      Fn::GetAtt:
      - WebInstanceSecurityGroup
      - GroupId
  BastionSecurityGroup:
    Description: BastionSecurityGroup
    Value:
      Fn::GetAtt:
      - BastionSecurityGroup
      - GroupId
  ALBSecurityGroup:
    Description: ALBSecurityGroup
    Value:
      Fn::GetAtt:
      - ALBSecurityGroup
      - GroupId
